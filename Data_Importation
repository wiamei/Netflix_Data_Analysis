import pandas
import requests
import zipfile
import io

# %store permet de stocker des variables dans l'environnement du notebook 

# movies.csv utilisé pour le sujet #1 et #2
url = "https://www.kaggle.com/api/v1/datasets/download/danielgrijalvas/movies"
try:
    r = requests.get(url)
    r.raise_for_status()
    with zipfile.ZipFile(io.BytesIO(r.content), "r") as z:
        fichier = z.open(z.namelist()[0])
    
        df_movies = pandas.read_csv(fichier)
        %store df_movies
        print("Téléchargement et extraction des données réussis 1/7")
except requests.exceptions.RequestException as erreur:
    print(f"Erreur de connexion à l'adresse {url} : {erreur}")

# Netflix_titles.csv utilisé pour le sujet #1 et #2
url = "https://www.kaggle.com/api/v1/datasets/download/shivamb/netflix-shows"
try:
    r = requests.get(url)
    r.raise_for_status()
    with zipfile.ZipFile(io.BytesIO(r.content), "r") as z:
        fichier = z.open(z.namelist()[0])
    
        df_netflix_titles = pandas.read_csv(fichier)
        %store df_netflix_titles
        print("Téléchargement et extraction des données réussis 2/7")
except requests.exceptions.RequestException as erreur:
    print(f"Erreur de connexion à l'adresse {url} : {erreur}")

# Lecture d'un jeu de données contenant un top 1000 des films selon leur score IMDB pour le sujet #3
url = "https://www.kaggle.com/api/v1/datasets/download/harshitshankhdhar/imdb-dataset-of-top-1000-movies-and-tv-shows"
try:
    r = requests.get(url)
    r.raise_for_status()
    with zipfile.ZipFile(io.BytesIO(r.content), "r") as z:
        fichier = z.open(z.namelist()[0])
    
        df_top1000_imdb = pandas.read_csv(fichier)
        %store df_top1000_imdb
        print("Téléchargement et extraction des données réussis 3/7")
except requests.exceptions.RequestException as erreur:
    print(f"Erreur de connexion à l'adresse {url} : {erreur}")
    
# Lecture d'un jeu de données contenant des films Netflix avec plusieurs caractéristiques associées.
url = "https://www.kaggle.com/api/v1/datasets/download/narayan63/netflix-popular-movies-dataset"
try:
    r = requests.get(url)
    r.raise_for_status()
    with zipfile.ZipFile(io.BytesIO(r.content), "r") as z:
        fichier = z.open(z.namelist()[0])
    
        df_netflix_pop_title = pandas.read_csv(fichier)
        %store df_netflix_pop_title
        print("Téléchargement et extraction des données réussis 4/7")
except requests.exceptions.RequestException as erreur:
    print(f"Erreur de connexion à l'adresse {url} : {erreur}")

# Lecture d'un jeu de données contenant des films avec leur score venant de Rotten Tomatoes et la plateforme sur laquelles ils sont. 
url = "https://www.kaggle.com/api/v1/datasets/download/ruchi798/movies-on-netflix-prime-video-hulu-and-disney"
try:
    r = requests.get(url)
    r.raise_for_status()
    with zipfile.ZipFile(io.BytesIO(r.content), "r") as z:
        fichier = z.open(z.namelist()[0])
    
        df_movies_diff_plat = pandas.read_csv(fichier)
        %store df_movies_diff_plat
        print("Téléchargement et extraction des données réussis 5/7")
except requests.exceptions.RequestException as erreur:
    print(f"Erreur de connexion à l'adresse {url} : {erreur}")

# Lecture d'un jeu de données pour le sujet #4
url = "https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv"
try:
    r = requests.get(url)
    r.raise_for_status()
    df_top10_global = pandas.read_csv(io.StringIO(r.text), sep='\t')
    %store df_top10_global
    print("Téléchargement et extraction des données réussis 6/7")

except requests.exceptions.RequestException as erreur:
    print(f"Erreur de connexion à l'adresse {url} : {erreur}")

# Lecture d'un jeu de données pour le sujet #4
url = "https://www.kaggle.com/api/v1/datasets/download/victorsoeiro/netflix-tv-shows-and-movies/titles.csv"
try:
    r = requests.get(url)
    r.raise_for_status()
    with zipfile.ZipFile(io.BytesIO(r.content), "r") as z:
        fichier = z.open(z.namelist()[0])
    
        df_titlescsv = pandas.read_csv(fichier)
        %store df_titlescsv
        print("Téléchargement et extraction des données réussis 7/7")
        
except requests.exceptions.RequestException as erreur:
    print(f"Erreur de connexion à l'adresse {url} : {erreur}")
